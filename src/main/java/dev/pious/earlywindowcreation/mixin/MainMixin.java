package dev.pious.earlywindowcreation.mixin;

import com.google.gson.Gson;
import com.mojang.authlib.properties.PropertyMap;
import com.mojang.blaze3d.systems.RenderSystem;
import dev.pious.earlywindowcreation.CustomWindowProvider;
import dev.pious.earlywindowcreation.EarlyWindowCreation;
import joptsimple.OptionParser;
import joptsimple.OptionSet;
import joptsimple.OptionSpec;
import net.minecraft.client.WindowSettings;
import net.minecraft.client.main.Main;
import net.minecraft.util.Util;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
import org.spongepowered.asm.mixin.injection.callback.LocalCapture;

import java.io.File;
import java.net.Proxy;
import java.util.List;
import java.util.OptionalInt;

@Mixin(Main.class)
public class MainMixin {
    @Inject(
            method = "main([Ljava/lang/String;Z)V",
            locals = LocalCapture.CAPTURE_FAILHARD,
            at = @At(
                    value = "INVOKE",
                    target = "Lnet/minecraft/util/crash/CrashReport;initCrashReport()V",
                    shift = At.Shift.AFTER
            )
    )
    // Function signature generated by temporarily changing CAPTURE_FAILHARD to PRINT.
    @SuppressWarnings({"InvalidInjectorMethodSignature", "rawtypes", "OptionalUsedAsFieldOrParameterType"})
    private static void main(String[] args, boolean optimizeDataFixer, CallbackInfo ci, OptionParser optionParser, OptionSpec optionSpec, OptionSpec optionSpec2, OptionSpec optionSpec3, OptionSpec optionSpec4, OptionSpec optionSpec5, OptionSpec optionSpec6, OptionSpec optionSpec7, OptionSpec optionSpec8, OptionSpec optionSpec9, OptionSpec optionSpec10, OptionSpec optionSpec11, OptionSpec optionSpec12, OptionSpec optionSpec13, OptionSpec optionSpec14, OptionSpec optionSpec15, OptionSpec optionSpec16, OptionSpec optionSpec17, OptionSpec optionSpec18, OptionSpec optionSpec19, OptionSpec optionSpec20, OptionSpec optionSpec21, OptionSpec optionSpec22, OptionSpec optionSpec23, OptionSpec optionSpec24, OptionSpec optionSpec25, OptionSpec optionSpec26, OptionSet optionSet, List list, String string, Proxy proxy, String string2, String string3, int i, int j, OptionalInt optionalInt, OptionalInt optionalInt2, boolean bl, boolean bl2, boolean bl3, boolean bl4, String string4, Gson gson, PropertyMap propertyMap, PropertyMap propertyMap2, String string5, File file, File file2, File file3, String string6, String string7, String string8, String string9, String string10, Integer integer) {
        EarlyWindowCreation.LOGGER.info("Creating a window");
        Util.nanoTimeSupplier = RenderSystem.initBackendSystem();
        EarlyWindowCreation.windowProvider = new CustomWindowProvider();
        // TODO: load resolution and fullscreen settings from settings.txt
        WindowSettings windowSettings = new WindowSettings(i, j, optionalInt, optionalInt2, false);
        EarlyWindowCreation.window = EarlyWindowCreation.windowProvider.createWindow(windowSettings, null, "Minecraft*");
        EarlyWindowCreation.windowCreationTime = System.currentTimeMillis();
    }
}
